#!/bin/bash
# Test Rust modules directly

echo "================================================================================"
echo "ü¶Ä ProTRACE Rust Modules Test"
echo "================================================================================"
echo ""

cd "$(dirname "$0")"

# Test 1: Check Rust toolchain
echo "üì¶ Test 1: Checking Rust toolchain..."
if command -v rustc &> /dev/null; then
    RUST_VERSION=$(rustc --version)
    echo "‚úÖ Rust installed: $RUST_VERSION"
else
    echo "‚ùå Rust not installed"
    exit 1
fi
echo ""

# Test 2: Check Cargo
echo "üì¶ Test 2: Checking Cargo..."
if command -v cargo &> /dev/null; then
    CARGO_VERSION=$(cargo --version)
    echo "‚úÖ Cargo installed: $CARGO_VERSION"
else
    echo "‚ùå Cargo not installed"
    exit 1
fi
echo ""

# Test 3: List crates
echo "üì¶ Test 3: Listing Rust crates..."
if [ -d "crates" ]; then
    echo "‚úÖ Crates directory found:"
    for crate in crates/*/; do
        CRATE_NAME=$(basename "$crate")
        echo "   - $CRATE_NAME"
    done
else
    echo "‚ùå No crates directory found"
fi
echo ""

# Test 4: Build DNA extraction crate
echo "üß¨ Test 4: Building DNA extraction crate..."
if [ -d "crates/dna_extraction" ]; then
    cd crates/dna_extraction
    if cargo build --release 2>&1 | tail -5; then
        echo "‚úÖ DNA extraction crate built successfully"
    else
        echo "‚ùå DNA extraction build failed"
    fi
    cd ../..
else
    echo "‚è≠Ô∏è  Skipped (crate not found)"
fi
echo ""

# Test 5: Test DNA extraction crate
echo "üß™ Test 5: Testing DNA extraction crate..."
if [ -d "crates/dna_extraction" ]; then
    cd crates/dna_extraction
    if cargo test --release 2>&1 | tail -10; then
        echo "‚úÖ DNA extraction tests passed"
    else
        echo "‚ö†Ô∏è  DNA extraction tests may have issues"
    fi
    cd ../..
else
    echo "‚è≠Ô∏è  Skipped (crate not found)"
fi
echo ""

# Test 6: Build Merkle tree crate
echo "üå≤ Test 6: Building Merkle tree crate..."
if [ -d "crates/merkle_tree" ]; then
    cd crates/merkle_tree
    if cargo build --release 2>&1 | tail -5; then
        echo "‚úÖ Merkle tree crate built successfully"
    else
        echo "‚ùå Merkle tree build failed"
    fi
    cd ../..
else
    echo "‚è≠Ô∏è  Skipped (crate not found)"
fi
echo ""

# Test 7: Test Merkle tree crate
echo "üß™ Test 7: Testing Merkle tree crate..."
if [ -d "crates/merkle_tree" ]; then
    cd crates/merkle_tree
    if cargo test --release 2>&1 | tail -10; then
        echo "‚úÖ Merkle tree tests passed"
    else
        echo "‚ö†Ô∏è  Merkle tree tests may have issues"
    fi
    cd ../..
else
    echo "‚è≠Ô∏è  Skipped (crate not found)"
fi
echo ""

# Test 8: Build Solana program
echo "üîó Test 8: Building Solana program..."
if [ -f "Anchor.toml" ]; then
    if anchor build 2>&1 | tail -10; then
        echo "‚úÖ Solana program built successfully"
    else
        echo "‚ùå Solana program build failed"
    fi
else
    echo "‚è≠Ô∏è  Skipped (not an Anchor project)"
fi
echo ""

# Test 9: Check build artifacts
echo "üì¶ Test 9: Checking build artifacts..."
ARTIFACTS_FOUND=0

if [ -f "target/deploy/protrace.so" ]; then
    SIZE=$(du -h target/deploy/protrace.so | cut -f1)
    echo "‚úÖ Solana program: $SIZE"
    ARTIFACTS_FOUND=$((ARTIFACTS_FOUND + 1))
fi

if [ -f "target/idl/protrace.json" ]; then
    SIZE=$(du -h target/idl/protrace.json | cut -f1)
    echo "‚úÖ IDL file: $SIZE"
    ARTIFACTS_FOUND=$((ARTIFACTS_FOUND + 1))
fi

if [ -f "crates/dna_extraction/target/release/libdna_extraction.rlib" ] || \
   [ -f "crates/dna_extraction/target/release/libdna_extraction.so" ]; then
    echo "‚úÖ DNA extraction library"
    ARTIFACTS_FOUND=$((ARTIFACTS_FOUND + 1))
fi

if [ -f "crates/merkle_tree/target/release/libmerkle_tree.rlib" ] || \
   [ -f "crates/merkle_tree/target/release/libmerkle_tree.so" ]; then
    echo "‚úÖ Merkle tree library"
    ARTIFACTS_FOUND=$((ARTIFACTS_FOUND + 1))
fi

if [ $ARTIFACTS_FOUND -eq 0 ]; then
    echo "‚ö†Ô∏è  No build artifacts found"
else
    echo "‚úÖ Found $ARTIFACTS_FOUND artifact(s)"
fi
echo ""

# Summary
echo "================================================================================"
echo "üìä TEST SUMMARY"
echo "================================================================================"
echo ""
echo "‚úÖ Rust toolchain verified"
echo "‚úÖ Cargo available"
echo "‚úÖ Crates structure verified"
echo ""
echo "Build Status:"
echo "  - DNA extraction: $([ -d 'crates/dna_extraction' ] && echo '‚úÖ Available' || echo '‚è≠Ô∏è  Not found')"
echo "  - Merkle tree:    $([ -d 'crates/merkle_tree' ] && echo '‚úÖ Available' || echo '‚è≠Ô∏è  Not found')"
echo "  - Solana program: $([ -f 'target/deploy/protrace.so' ] && echo '‚úÖ Deployed' || echo '‚ö†Ô∏è  Not built')"
echo ""
echo "Status: ‚úÖ RUST MODULES TEST COMPLETE"
echo ""
echo "================================================================================"
